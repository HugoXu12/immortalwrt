name: Build ImmortalWrt x86_64 with Plugins

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-22.04

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install Dependencies
      run: |
        sudo apt update
        sudo apt install -y build-essential clang flex bison g++ gawk \
        gettext libncurses-dev libssl-dev python3-distutils rsync unzip \
        zlib1g-dev file wget

    - name: Clone ImmortalWrt
      run: |
        git clone https://github.com/immortalwrt/immortalwrt.git
        cd immortalwrt

        # 添加外部 feed
        echo 'src-git kenzo https://github.com/kenzok8/openwrt-packages' >> feeds.conf.default
        echo 'src-git small https://github.com/kenzok8/small' >> feeds.conf.default
        echo 'src-git openclash https://github.com/vernesong/OpenClash' >> feeds.conf.default

        ./scripts/feeds update -a
        ./scripts/feeds install -a

    - name: Create .config
      run: |
        cd immortalwrt
        cat > .config <<EOF
        CONFIG_TARGET_x86=y
        CONFIG_TARGET_x86_64=y
        CONFIG_TARGET_x86_64_DEVICE_generic=y

        CONFIG_PACKAGE_luci=y
        CONFIG_PACKAGE_luci-app-wireguard=y
        CONFIG_PACKAGE_wireguard-tools=y
        CONFIG_PACKAGE_kmod-wireguard=y

        CONFIG_PACKAGE_luci-app-ssr-plus=y
        CONFIG_PACKAGE_luci-i18n-ssr-plus-zh-cn=y
        CONFIG_PACKAGE_shadowsocksr-libev-client=y
        CONFIG_PACKAGE_shadowsocksr-libev-server=y

        CONFIG_PACKAGE_luci-app-aliddns=y

        CONFIG_PACKAGE_luci-app-frpc=y
        CONFIG_PACKAGE_frpc=y

        CONFIG_PACKAGE_luci-app-openclash=y

        # 常用工具
        CONFIG_PACKAGE_luci-app-ttyd=y
        CONFIG_PACKAGE_htop=y
        CONFIG_PACKAGE_coreutils-nohup=y
        CONFIG_PACKAGE_vim-full=y

        CONFIG_TARGET_KERNEL_PARTSIZE=64
        CONFIG_TARGET_ROOTFS_PARTSIZE=512
        CONFIG_TARGET_IMAGES_GZIP=y
        EOF

        make defconfig

    - name: Download sources
      run: |
        cd immortalwrt
        make download -j8 || true

    - name: Build firmware
      run: |
        cd immortalwrt
        make -j$(nproc) || make -j1 V=s

    - name: Upload firmware
      uses: actions/upload-artifact@v4
      with:
        name: ImmortalWrt-x86_64
        path: |
          immortalwrt/bin/targets/x86/64/*.img.gz
          immortalwrt/bin/targets/x86/64/*.vmdk
          immortalwrt/bin/targets/x86/64/config.buildinfo
          immortalwrt/bin/targets/x86/64/feeds.buildinfo
          immortalwrt/bin/targets/x86/64/packages.buildinfo
          immortalwrt/bin/targets/x86/64/*.manifest
